>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

SUCCESS CASES:

>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

FAILURE CASES:

>>> bg = BaseGeometry()
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg = BaseGeometry()
>>> bg.integer_validator(None)
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg = BaseGeometry()
>>> bg.integer_validator("")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg = BaseGeometry()
>>> bg.integer_validator("Hello", -2)
Traceback (most recent call last):
...
ValueError: Hello must be greater than 0

>>> bg = BaseGeometry()
>>> bg.integer_validator("Hello", 0)
Traceback (most recent call last):
...
ValueError: Hello must be greater than 0

>>> bg = BaseGeometry()
>>> bg.integer_validator("Hello", "world")
Traceback (most recent call last):
...
TypeError: Hello must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("Hello", 45.67)
Traceback (most recent call last):
...
TypeError: Hello must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("Hello", (45,67))
Traceback (most recent call last):
...
TypeError: Hello must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("Hello", {45, 67})
Traceback (most recent call last):
...
TypeError: Hello must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("Hello", True)
Traceback (most recent call last):
...
TypeError: Hello must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("Hello", [45, 67])
Traceback (most recent call last):
...
TypeError: Hello must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("Hello", 45, 67)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given


