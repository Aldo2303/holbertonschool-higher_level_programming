>>> print_square= __import__('4-print_square').print_square

SUCCESS CASES:

When size is int and >= 0:

    >>> print_square(0)


    >>> print_square(3)
    ###
    ###
    ###

    >>> print_square(1)
    #

    >>> print_square(True)
    #

FAILURE CASES:

Without Arguments:

    >>> print_square()
    Traceback (most recent call last):
    ...
    TypeError: print_square() missing 1 required positional argument: 'size'

With None Arguments:

    >>> print_square(None)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

When size is int and < 0:

    >>> print_square(-5)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

When size is NaN:

    >>> print_square("NaN")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

When size is infinity:

    >>> print_square(float("inf"))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

    >>> print_square(1e2000)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

When different data Type:

    >>> print_square(6.54)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

    >>> print_square("Hello")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

    >>> print_square([4])
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

    >>> print_square({3})
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Extra Arguments:

    >>> print_square(9, 2)
    Traceback (most recent call last):
    ...
    TypeError: print_square() takes 1 positional argument but 2 were given
